import axios from 'axios';
import fetch from 'node-fetch';

let handler = async (m, { conn, args, usedPrefix, command }) => {
  let text = args.join(' ');
  let chat = m.chat;
  let name = m.pushName || 'Usuario';
  let responderActivo = db.data.chats[m.chat]?.responder;

  if (!text) {
    return conn.reply(chat, `✳️ Ingresa tu pregunta\nEjemplo: *${usedPrefix + command}* ¿quién inventó WhatsApp?`, m);
  }

  if (!responderActivo && !m.isGroup) {
    return conn.reply(chat, `⚠️ El autoresponder está *desactivado* en este chat. Usa:\n*${usedPrefix}enable autoresponder*`, m);
  }

  try {
    await conn.sendMessage(chat, { react: { text: '⏳', key: m.key } });

    let prompt = await getPrompt();
    let result;

    try {
      result = await luminaiQuery(text, name, prompt);
      result = cleanResponse(result);
    } catch (e) {
      console.error('Error Luminai:', e);
      try {
        result = await perplexityQuery(text, prompt);
      } catch (e) {
        console.error('Error Perplexity:', e);
        throw new Error('No se obtuvo respuesta de los servicios');
      }
    }

    let responseMsg = `${result}`;

    await conn.reply(chat, responseMsg, m);
    await conn.sendMessage(chat, { react: { text: '✅', key: m.key } });
  } catch (error) {
    console.error(error);
    await conn.reply(chat, `❌ Error: ${error.message}`, m);
    await conn.sendMessage(chat, { react: { text: '❌', key: m.key } });
  }
};

async function getPrompt() {
  try {
    const res = await fetch('https://raw.githubusercontent.com/elrebelde21/LoliBot-MD/main/src/text-chatgpt.txt');
    return await res.text();
  } catch {
    return 'Eres un asistente inteligente';
  }
}

function cleanResponse(text) {
  if (!text) return '';
  return text
    .replace(/Maaf, terjadi kesalahan saat memproses permintaan Anda/g, '')
    .replace(/Generated by BLACKBOX\.AI.*?https:\/\/www\.blackbox\.ai/g, '')
    .replace(/and for API requests replace https:\/\/www\.blackbox\.ai with https:\/\/api\.blackbox\.ai/g, '')
    .trim();
}

async function luminaiQuery(q, user, prompt) {
  const { data } = await axios.post('https://luminai.my.id', {
    content: q,
    user: user,
    prompt: prompt,
    webSearchMode: true
  });
  return data.result;
}

async function perplexityQuery(q, prompt) {
  const { data } = await axios.get('https://api.perplexity.ai/chat', {
    params: {
      query: encodeURIComponent(q),
      context: encodeURIComponent(prompt)
    }
  });
  return data.response;
}

handler.command = ['ai'];
handler.help = ['luminai <pregunta>'];
handler.tags = ['ai'];
handler.register = true;
handler.premium = false;

export default handler;
